/*******************************************************************************
 *   (c) 2018 - 2022 Zondax AG
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 ********************************************************************************/

#include <hexutils.h>

#include <cstring>
#include <iostream>
#include <vector>

#include "crypto_helper.h"
#include "gmock/gmock.h"
#include "leb128.h"

using namespace std;
struct NamAddress {
  string pubkey;
  string address;
};

struct LEB128Testcase {
  uint64_t input;
  vector<uint8_t> expected;
  uint8_t consumed;
};

TEST(Address, NamadaEncoding) {
  vector<NamAddress> addresses{
      {"9634575029ce5ef3b7bb548e7fcacfffdae8897c9732c2bc30376258fd0a1c9f",
       "tnam1qz3pcwcrra2zw8fsaryh3tuuy3dzfrexcuk3jw7h"},
      {"c7cdf55184b9456332df165f78fcef4b64dd639a3cf9454bd7112d62aaccbc86",
       "tnam1qrmnjwdpwmsruk30a35yqsfsh9wgywcamumj8amg"},
      {"d76b1c5695049825e4022d0650ac8a5a6a3e1ea88fbe30b02e571e0a7f98dade",
       "tnam1qqc49r9taphkhc25qnwnsgkdz4j5wl8c6yeysjas"},
      {"b1f9725374a60fe56bf4ee5f9db9666f411b6f64133edb8a96c08e502f41399a",
       "tnam1qrx5ggscqyfg3zajlztxf2w4pz2q366ahgln4kkj"},
      {"f5c4448c1b80cd9738a7a123fc81263d498ef453fc5ad6ddd98e73a1012603be",
       "tnam1qqse36g497m6s5den79wfs9prwwhf29mrqag9ngj"},
      {"07404767b893c0947ec5e716589737e10079ecefca5804b04369dcf32acfdce0",
       "tnam1qpvlr52kwyppx6kjuwta48w3rchzm53jn5wx2cr0"},
      {"5d4320f72937ef7286f719a85c80c5c94b46b701777a8b0c11103b59216130e3",
       "tnam1qpznuls96xtm073e38xtyqq59ysdf7t2cgecsvck"},
      {"bd43f2977212b8d190c7f3f8c9f704444baa137fdcecae25caf37003187a6393",
       "tnam1qpcn9ml2452r9qty6m24xvga9upszgxgusatjd54"},
      {"63995c4e214ea4aa11bd39d72fafff14fe4863fd1206ce8024d625a6beab25c9",
       "tnam1qpxsftlhety7q6ud9xqauhys3rs5zn408v45g94g"},
      {"b774893e3fd3adca09b8ffb09b6e5c0aabe605c17572c0ee0f89e46d7c0e0511",
       "tnam1qql48y48256lwaxv9kpykjhl4xngd3euwglmceks"},
      {"5d55414cc6f88216b5f988210d8c6326c3b14bddf39354a3ff482a866cf7a8bd",
       "tnam1qzmmwmsr89vz8fctq9fznfgeexwrmtammuvty3mp"},
      {"a5ab6e3d8d6e7f047c6ef42dc99d3b5bff42fbedcbba5c648e45527aafd1d298",
       "tnam1qqtpy826hf37n7s6n80uwk0qys8cgk3phs8ut7zt"},
      {"a39f0db14ea98e5f813e9b42083587b2367fa503b1f849ef780de886698c6840",
       "tnam1qqdue893eeme8l29wllh89mp9pel64zzhuflftqd"},
      {"43afee356fa2e2da1de56705cd2f16531ef2914abdebdeb57ee0ad7be309a901",
       "tnam1qz3pv6u2xwxdncjgtwr9fy8h0dwdy078jql5kxf4"},
      {"836fb47a9c8e971d3060916f4370c40a6ce0be7b4ab35fe113828ed811663b68",
       "tnam1qzj48de7gdqy4ljzdq5cv7m4mhydjzy0k5ewhn2j"},
      {"72c81d781092ed6a651cca784d5bee8c3de4a3ff0f4b2af90253784bf69424c3",
       "tnam1qzqeg78j3ksm6w6cup80uk2kz7nlhe0kn5qwjlv8"},
      {"9e40f910b19fc53900b1540fb24817e7d5408c0a34189f6eb091fc7873fb3458",
       "tnam1qr3j02d0fegpp220y620svp4dzjve59rdvtmdx7d"},
      {"e24cf05d45273fa955915a84a840587a0f64dc9d4332f930bc02bd76ca945bda",
       "tnam1qp3u2yplk8ng2qag64wdk9ssc7nft8sw4y8pcc0g"},
      {"6d0e23f95787481ed55415c92a98e72d833ebb2aaf1b8df6dd8e94c583d0e1c7",
       "tnam1qrhpzl4cry7amt0mgchz73mv2gz6t0cz4smfxt9t"},
      {"7cf5371c3250b74afc65d67b80bbbb99613823b5d415a74df9677127c8e70c1e",
       "tnam1qrrrlvxvyexaj3ytzky4dzqnckxgpfyu4qe2r5tn"}};

  for (const auto& testcase : addresses) {
    uint8_t pubkey[100] = {0};
    auto bufferLen =
        parseHexString(pubkey, sizeof(pubkey), testcase.pubkey.c_str());

    uint8_t actualAddress[ADDRESS_LEN_TESTNET] = {0};
    const uint8_t address_len = crypto_encodePubkey_ed25519(
        actualAddress, sizeof(actualAddress), addr_mainnet_transparent, pubkey);
    EXPECT_EQ(address_len, ADDRESS_LEN_TESTNET);

    const string namada_address(actualAddress,
                                actualAddress + ADDRESS_LEN_TESTNET);
    EXPECT_EQ(namada_address, testcase.address);
  }
}

TEST(LEB128, LEB128Encoding) {
  vector<LEB128Testcase> leb128_encoding{
      {12, {0x0C}, 1},
      {32, {0x20}, 1},
      {1548174235,
       {
           0x9B,
           0x87,
           0x9D,
           0xE2,
           0x05,
       },
       5},
      {693000000,
       {
           0xC0,
           0xAE,
           0xB9,
           0xCA,
           0x02,
       },
       5},
      {1135613917,
       {
           0xDD,
           0xAF,
           0xC0,
           0x9D,
           0x04,
       },
       5},
      {390000000,
       {
           0x80,
           0xDB,
           0xFB,
           0xB9,
           0x01,
       },
       5},
      {1150276518,
       {
           0xA6,
           0xA7,
           0xBF,
           0xA4,
           0x04,
       },
       5},
      {992000000,
       {
           0x80,
           0xF0,
           0x82,
           0xD9,
           0x03,
       },
       5},
      {1640106391,
       {
           0x97,
           0x93,
           0x88,
           0x8E,
           0x06,
       },
       5},
      {965000000,
       {
           0xC0,
           0xF6,
           0x92,
           0xCC,
           0x03,
       },
       5},
      {1002286660, {0xC4, 0xDC, 0xF6, 0xDD, 0x03}, 5},
      {308000000, {0x80, 0xEA, 0xEE, 0x92, 0x01}, 5},
  };

  for (const auto& testcase : leb128_encoding) {
    uint8_t encoded[MAX_LEB128_OUTPUT] = {0};
    uint8_t bytes = 0;
    const zxerr_t err = encodeLEB128(testcase.input, (uint8_t*)&encoded,
                                     MAX_LEB128_OUTPUT, &bytes);

    ASSERT_EQ(err, zxerr_ok);
    ASSERT_EQ(testcase.consumed, bytes);

    EXPECT_TRUE(memcmp(testcase.expected.data(), &encoded, bytes) == 0);
  }
}

#if 0
TEST(OuterTxn, HashOuterTxn) {
        vector<OuterLayerTransactionTestcase> outer_transactions {
                {
                        {0x4b, 0x57, 0x4b, 0x79, 0x42, 0x75, 0x6f, 0x4a, 0x48, 0x6d, 0x64, 0x30, 0x59, 0x33, 0x69, 0x54, 0x64, 0x30, 0x49, 0x7a, 0x36, 0x69, 0x77, 0x33, 0x6d, 0x47, 0x64, 0x58, 0x35, 0x68, 0x76, 0x55, 0x6a, 0x58, 0x43, 0x66, 0x6c, 0x32, 0x4f, 0x79, 0x4c, 0x53, 0x77, 0x57, 0x4e, 0x78, 0x73, 0x59, 0x70, 0x31, 0x73, 0x36, 0x73, 0x62, 0x57, 0x34, 0x68, 0x41, 0x56, 0x73, 0x6b, 0x50, 0x36, 0x36, 0x56, 0x34, 0x34, 0x6c, 0x71, 0x34, 0x41, 0x70, 0x4f, 0x4e, 0x53, 0x69, 0x44, 0x48, 0x43, 0x63, 0x6d, 0x4a, 0x59, 0x31, 0x44, 0x48, 0x77, 0x65, 0x46, 0x64, 0x67, 0x62, 0x6d, 0x38, 0x35, 0x45, 0x36, 0x4e, 0x79, 0x38, 0x65, 0x38, 0x70, 0x4c, 0x6a, 0x4a, 0x6f, 0x70, 0x45, 0x4d, 0x69, 0x49, 0x34, 0x6b, 0x47, 0x59, 0x6f, 0x52, 0x56, 0x79, 0x6c, 0x62, 0x79, 0x4b, 0x79, 0x46, 0x31, 0x4a, 0x77, 0x6c, 0x34, 0x42, 0x6f, 0x36, 0x6b, 0x4e, 0x54, 0x48, 0x67, 0x30, 0x32, 0x36, 0x61, 0x66, 0x50, 0x32, 0x6d, 0x74, 0x6f, 0x4f, 0x52, 0x38, 0x6b, 0x6e, 0x4c, 0x35, 0x37, 0x4a, 0x58, 0x66, 0x61, 0x51, 0x4e, 0x52, 0x48, 0x70, 0x39, 0x39, 0x72, 0x5a, 0x39, 0x54, 0x78, 0x76, 0x4a, 0x64, 0x31, 0x6f, 0x56, 0x70, 0x30, 0x44, 0x59, 0x39, 0x6d, 0x64, 0x56, 0x4e, 0x75, 0x4d, 0x6b, 0x45, 0x34, 0x53, 0x6d, 0x67, 0x62, 0x47, 0x50, 0x35, 0x36, 0x54, 0x52, 0x5a, 0x31, 0x62, 0x65, 0x71, 0x4a, 0x34, 0x41, 0x47, 0x78, 0x33, 0x64, 0x44, 0x67, 0x78, 0x6c, 0x71, 0x36, 0x64, 0x66, 0x69, 0x76, 0x51, 0x41, 0x4c, 0x75, 0x35, 0x31, 0x48, 0x50, 0x34, 0x4e, 0x56, 0x42, 0x33, 0x72, 0x38, 0x53, 0x36, 0x4b, 0x35, 0x4a, 0x59, 0x6f, 0x6c, 0x76, 0x31, 0x34, 0x41, 0x50, 0x6d, 0x67, 0x38, 0x52, 0x49, 0x55, 0x79, 0x6a, 0x4a, 0x30, 0x43, 0x41, 0x64, 0x69, 0x76, 0x67, 0x69, 0x30, 0x7a, 0x64, 0x75, 0x64, 0x6a, 0x44, 0x39, 0x6a, 0x64, 0x42, 0x4c, 0x6b, 0x36, 0x5a, 0x61, 0x6e, 0x34, 0x31, 0x4a, 0x49, 0x6a, 0x5a, 0x59, 0x4e, 0x37, 0x46, 0x69, 0x73, 0x30, 0x36, 0x34, 0x61, 0x39, 0x37, 0x62, 0x51, 0x75, 0x71, 0x5a, 0x47, 0x69, 0x72, 0x64, 0x52, 0x38, 0x6f, 0x49, 0x52, 0x42, 0x63, 0x73, 0x74, 0x52, 0x54, 0x6a, 0x5a, 0x48, 0x32, 0x58, 0x67, 0x73, 0x58, 0x66, 0x59, 0x39, 0x4c, 0x7a, 0x69, 0x4b, 0x71, 0x74, 0x4e, 0x41, 0x33, 0x32, 0x73, 0x78, 0x4f, 0x78, 0x6d, 0x50, 0x6c, 0x7a, 0x66, 0x61, 0x48, 0x5a, 0x30, 0x77, 0x43, 0x57, 0x43, 0x73, },
                        {0x6e, 0x38, 0x32, 0x61, 0x79, 0x6b, 0x77, 0x46, 0x46, 0x4c, 0x44, 0x63, 0x76, 0x30, 0x59, 0x64, 0x4f, 0x48, 0x4a, 0x79, 0x51, 0x37, 0x41, 0x51, 0x38, 0x39, 0x4e, 0x34, 0x61, 0x6d, 0x31, 0x4d, 0x50, 0x63, 0x33, 0x30, 0x41, 0x78, 0x32, 0x44, 0x44, 0x7a, 0x68, 0x38, 0x53, 0x51, 0x72, 0x6a, 0x54, 0x4f, 0x44, 0x52, 0x36, 0x34, 0x49, 0x34, 0x71, 0x30, 0x30, 0x30, 0x6a, 0x50, 0x73, 0x34, 0x6a, 0x69, 0x70, 0x78, 0x74, 0x74, 0x30, 0x70, 0x56, 0x64, 0x49, 0x4c, 0x45, 0x73, 0x4a, 0x54, 0x6c, 0x4a, 0x45, 0x30, 0x49, 0x74, 0x34, 0x36, 0x4e, 0x34, 0x68, 0x55, 0x46, 0x70, 0x58, 0x6c, 0x4a, 0x61, 0x52, 0x72, 0x67, 0x4f, 0x66, 0x61, 0x67, 0x55, 0x66, 0x42, 0x4b, 0x64, 0x47, 0x51, 0x66, 0x6b, 0x77, 0x31, 0x6b, 0x44, 0x35, 0x43, 0x32, 0x71, 0x49, 0x38, 0x64, 0x64, 0x68, 0x63, 0x74, 0x62, 0x5a, 0x74, 0x39,},
                        {1455898003, 565000000},
                        {0x5c, 0x2b, 0x7d, 0xc6, 0xeb, 0x34, 0x75, 0x2e, 0x27, 0x94, 0xfe, 0x56, 0x5f, 0x32, 0xbb, 0xf1, 0xa7, 0x1a, 0x8b, 0xea, 0x92, 0x47, 0xc2, 0xff, 0xce, 0xd4, 0x16, 0xc0, 0xad, 0xf5, 0x44, 0x8e,}
                },
                {
                        {0x34, 0x56, 0x33, 0x44, 0x64, 0x59, 0x53, 0x31, 0x62, 0x6b, 0x31, 0x59, 0x70, 0x53, 0x66, 0x37, 0x51, 0x64, 0x6f, 0x45, 0x55, 0x65, 0x6d, 0x45, 0x6a, 0x6b, 0x4c, 0x45, 0x4e, 0x73, 0x76, 0x46, 0x39, 0x69, 0x6f, 0x45, 0x5a, 0x72, 0x34, 0x4a, 0x55, 0x41, 0x6a, 0x67, 0x51, 0x31, 0x6d, 0x65, 0x79, 0x61, 0x41, 0x51, 0x44, 0x53, 0x6f, 0x4b, 0x34, 0x57, 0x71, 0x79, 0x7a, 0x6d, 0x4d, 0x6b, 0x6b, 0x42, 0x49, 0x44, 0x69, 0x53, 0x63, 0x4f, 0x46, 0x65, 0x56, 0x5a, 0x7a, 0x39, 0x4d, 0x4c, 0x59, 0x6f, 0x35, 0x33, 0x51, 0x33, 0x55, 0x6f, 0x49, 0x44, 0x38, 0x75, 0x42, 0x66, 0x67, 0x43, 0x6c, 0x35, 0x64, 0x52, 0x37, 0x38, 0x46, 0x73, 0x45, 0x7a, 0x36, 0x6d, 0x76, 0x68, 0x72, 0x4f, 0x56, 0x67, 0x71, 0x31, 0x33, 0x50, 0x64, 0x6a, 0x46, 0x41, 0x59, 0x47, 0x78, 0x6b, 0x45, 0x6e, 0x78, 0x43, 0x46, 0x31, 0x42, 0x64, 0x5a, 0x64, 0x38, 0x5a, 0x6e, 0x6b, 0x51, 0x6f, 0x61, 0x57, 0x4f, 0x31, 0x58, 0x56, 0x72, 0x32, 0x31, 0x62, 0x41, 0x67, 0x64, 0x70, 0x56, 0x38, 0x4f, 0x56, 0x71, 0x4c, 0x74, 0x6c, 0x78, 0x54, 0x6b, 0x31, 0x61, 0x76, 0x51, 0x46, 0x70, 0x6e, 0x57, 0x5a, 0x51, 0x48, 0x69, 0x43, 0x72, 0x35, 0x63, 0x57, 0x54, 0x4f, 0x68, },
                        {0x7a, 0x70, 0x6b, 0x4c, 0x57, 0x59, 0x6e, 0x62, 0x50, 0x59, 0x56, 0x77, 0x68, 0x4b, 0x4f, 0x68, 0x53, 0x6d, 0x44, 0x54, 0x61, 0x4d, 0x54, 0x49, 0x42, 0x4b, 0x56, 0x43, 0x6a, 0x57, 0x70, 0x56, 0x34, 0x49, 0x69, 0x45, 0x33, 0x58, 0x47, 0x36, 0x79, 0x47, 0x6b, 0x36, 0x6a, 0x6d, 0x52, 0x47, 0x6d, 0x74, 0x36, 0x34, 0x53, 0x4e, 0x70, 0x5a, 0x49, 0x39, 0x39, 0x34, 0x66, 0x56, 0x6e, 0x49, 0x33, 0x4a, 0x5a, 0x73, 0x43, 0x36, 0x56, 0x6f, 0x45, 0x65, 0x53, 0x61, 0x73, 0x49, 0x50, 0x44, 0x64, 0x42, 0x4f, 0x78, 0x46, 0x67, 0x73, 0x74, 0x65, 0x4d, 0x77, 0x48, },
                        {1015080732, 797000000},
                        {0x54, 0xe6, 0xac, 0x3f, 0x52, 0x59, 0xb9, 0x61, 0xa6, 0x1d, 0x68, 0x40, 0x43, 0xfb, 0xe8, 0xb7, 0x30, 0x69, 0xe4, 0xaf, 0xa7, 0xdc, 0x14, 0x82, 0x91, 0x72, 0x62, 0x79, 0xd0, 0xfd, 0x3e, 0xa9, }
                },
                {
                        {0x61, 0x4b, 0x54, 0x71, 0x4e, 0x42, 0x6e, 0x6f, 0x49, 0x58, 0x57, 0x41, 0x50, 0x61, 0x44, 0x32, 0x79, 0x42, 0x39, 0x32, 0x63, 0x65, 0x68, 0x6a, 0x67, 0x4b, 0x33, 0x51, 0x78, 0x49, 0x48, 0x4a, 0x6d, 0x46, 0x49, 0x52, 0x64, 0x70, 0x54, 0x46, 0x6a, 0x7a, 0x38, 0x7a, 0x4b, 0x42, 0x4a, 0x6e, 0x55, 0x74, 0x6f, 0x6b, 0x32, 0x4b, 0x54, 0x65, 0x66, 0x76, 0x30, 0x55, 0x6e, 0x68, 0x35, 0x4d, 0x47, 0x6e, 0x75, 0x63, 0x68, 0x75, 0x69, 0x57, 0x6f, 0x41, 0x6c, 0x61, 0x4f, 0x6e, 0x6d, 0x49, 0x6f, 0x79, 0x73, 0x58, 0x56, 0x53, 0x57, 0x4e, 0x71, 0x4a, 0x4f, 0x63, 0x66, 0x46, 0x43, 0x62, 0x33, 0x43, 0x6e, 0x76, 0x46, 0x42, 0x68, 0x39, 0x67, 0x63, 0x67, 0x69, 0x68, 0x64, 0x43, 0x78, 0x41, 0x62, 0x68, 0x5a, 0x51, 0x54, 0x31, 0x64, 0x33, 0x69, 0x41, 0x63, 0x51, 0x55, 0x46, 0x73, 0x4c, 0x62, 0x71, 0x54, 0x37, 0x37, 0x65, 0x50, 0x64, 0x44, 0x47, 0x33, 0x50, 0x64, 0x6c, 0x54, 0x57, 0x78, 0x42, 0x4b, 0x6e, 0x6d, 0x35, 0x64, 0x4a, 0x31, 0x70, 0x59, 0x4e, 0x6f, 0x67, 0x38, 0x57, 0x71, 0x55, 0x52, 0x69, 0x67, 0x4d, 0x47, 0x4a, 0x65, 0x46, 0x30, 0x47, 0x33, 0x6b, 0x79, 0x6a, 0x49, 0x55, 0x76, 0x4e, 0x32, 0x52, 0x4c, 0x54, 0x66, 0x61, 0x30, 0x78, 0x71, 0x46, 0x69, 0x46, 0x65, 0x61, 0x58, 0x41, 0x65, 0x31, 0x7a, 0x78, 0x4a, 0x64, 0x79, 0x61, 0x41, 0x79, 0x6c, 0x33, 0x31, 0x64, 0x56, 0x70, 0x48, 0x4e, 0x57, 0x75, 0x45, 0x31, 0x31, 0x31, 0x61, 0x6a, 0x67, 0x62, 0x51, 0x33, 0x6c, 0x73, 0x44, 0x51, 0x36, 0x73, 0x72, 0x6a, 0x56, 0x6a, 0x57, 0x41, 0x41, 0x54, 0x62, 0x6d, 0x4b, 0x63, 0x36, 0x61, 0x34, 0x66, 0x41, 0x65, 0x37, 0x77, 0x52, 0x70, 0x6b, 0x62, 0x53, 0x55, 0x64, 0x38, 0x43, 0x46, 0x68, 0x71, 0x6e, 0x76, 0x71, 0x63, 0x74, 0x35, 0x73, 0x59, 0x71, 0x39, 0x79, 0x57, 0x4c, 0x4e, 0x4d, 0x4d, 0x4b, 0x34, 0x32, 0x5a, 0x32, 0x4e, 0x66, 0x47, 0x58, 0x33, 0x38, 0x42, 0x79, 0x77, 0x76, },
                        {0x72, 0x4b, 0x44, 0x75, 0x66, 0x6d, 0x38, 0x6e, 0x45, 0x4c, 0x4a, 0x7a, 0x73, 0x5a, 0x58, 0x47, 0x5a, 0x6e, 0x4f, 0x55, 0x59, 0x68, 0x77, 0x70, 0x51, 0x78, 0x6a, 0x61, 0x70, 0x54, 0x66, 0x69, 0x57, 0x61, 0x53, 0x66, 0x48, 0x44, 0x49, 0x50, 0x52, 0x54, 0x63, 0x4b, 0x78, 0x53, 0x53, 0x57, 0x46, 0x53, 0x31, 0x4f, 0x77, 0x79, 0x4f, 0x36, 0x44, 0x4c, 0x64, 0x32, 0x47, 0x55, 0x53, 0x59, 0x43, 0x4a, 0x31, 0x47, 0x61, 0x5a, 0x64, 0x37, 0x45, 0x6d, 0x68, 0x4e, 0x6b, 0x73, 0x4d, 0x68, 0x4a, 0x6e, 0x4f, 0x50, 0x4a, 0x35, 0x62, 0x6d, 0x4b, 0x51, 0x56, 0x64, 0x4f, 0x53, 0x48, 0x78, 0x6d, 0x66, 0x35, 0x4c, 0x68, 0x78, 0x34, 0x31, 0x37, 0x62, 0x76, 0x35, 0x6a, 0x52, 0x69, 0x67, 0x54, 0x35, 0x6f, 0x6d, 0x42, 0x45, 0x72, 0x69, 0x65, 0x51, 0x42, 0x79, 0x46, 0x44, 0x67, 0x79, 0x65, 0x4b, 0x50, 0x71, 0x54, 0x5a, 0x72, 0x74, 0x44, 0x5a, 0x6f, 0x31, 0x6b, 0x62, 0x4b, 0x57, 0x4c, 0x59, 0x52, 0x77, 0x63, 0x31, 0x6d, 0x32, 0x49, },
                        {1309573700, 772000000},
                        {0xf2, 0x1c, 0x55, 0x62, 0x4c, 0xde, 0x8a, 0x99, 0xe, 0xab, 0xc7, 0x1d, 0xc5, 0x39, 0x6d, 0xff, 0xb7, 0x32, 0xbf, 0x9b, 0x34, 0xb0, 0xf7, 0xe2, 0x1b, 0x41, 0xb1, 0xd2, 0x9f, 0xcc, 0x36, 0x8f, }
                },
                {
                        {0x4b, 0x6f, 0x73, 0x65, 0x39, 0x6d, 0x63, 0x41, 0x44, 0x72, 0x65, 0x47, 0x72, 0x59, 0x52, 0x72, 0x57, 0x6a, 0x78, 0x56, 0x38, 0x55, 0x43, 0x54, 0x73, 0x74, 0x57, 0x44, 0x35, 0x70, 0x7a, 0x4c, 0x75, 0x52, 0x63, 0x5a, 0x72, 0x44, 0x6f, 0x51, 0x4f, 0x37, 0x78, 0x44, 0x77, 0x4b, 0x78, 0x72, 0x73, 0x51, 0x6f, 0x6d, 0x70, 0x41, 0x4e, 0x61, 0x6a, 0x72, 0x72, 0x75, 0x4d, 0x4d, 0x53, 0x61, 0x63, 0x54, 0x43, 0x39, 0x33, 0x76, 0x56, 0x71, 0x41, 0x4a, 0x70, 0x39, 0x70, 0x46, 0x68, 0x58, 0x47, 0x52, 0x62, 0x7a, 0x62, 0x6c, 0x33, 0x68, 0x68, 0x57, 0x6e, 0x76, 0x74, 0x65, 0x73, 0x4c, 0x52, 0x31, 0x4c, 0x4f, 0x4b, 0x68, 0x6f, 0x36, 0x41, 0x33, 0x49, 0x4f, 0x77, 0x68, 0x4f, 0x78, 0x42, 0x78, 0x65, 0x70, 0x57, 0x6f, 0x50, 0x63, 0x51, 0x36, 0x55, 0x46, 0x42, 0x4f, 0x48, 0x41, 0x74, 0x55, 0x79, 0x47, 0x6a, 0x51, 0x64, 0x48, 0x30, 0x64, 0x74, 0x5a, 0x30, 0x74, 0x39, 0x38, 0x42, 0x65, 0x6d, 0x33, 0x41, 0x54, 0x56, 0x72, 0x77, 0x6b, 0x45, 0x4d, 0x78, 0x78, 0x77, 0x39, 0x66, 0x54, 0x4e, 0x65, 0x6c, 0x71, 0x48, 0x76, 0x77, 0x33, 0x43, 0x6c, 0x6c, 0x42, 0x51, 0x61, 0x33, 0x6f, 0x53, 0x43, 0x72, 0x55, 0x35, 0x75, 0x6f, 0x48, 0x65, 0x5a, 0x65, 0x62, 0x39, 0x66, 0x43, 0x53, 0x61, 0x4f, 0x76, 0x58, 0x76, 0x6c, 0x38, 0x76, 0x36, 0x6a, 0x37, 0x78, 0x47, 0x7a, 0x6c, 0x53, 0x46, 0x56, 0x6b, 0x63, 0x78, 0x54, 0x54, 0x4a, 0x6f, 0x6b, 0x47, 0x55, 0x50, 0x61, 0x52, 0x32, 0x45, 0x38, 0x78, 0x43, 0x56, 0x35, 0x77, 0x79, 0x6f, 0x5a, 0x4d, 0x65, 0x46, 0x4c, 0x4a, 0x7a, 0x4f, 0x30, 0x6e, 0x36, 0x39, 0x49, 0x38, 0x79, 0x76, 0x39, 0x48, 0x34, 0x59, 0x52, 0x44, 0x57, 0x36, 0x53, 0x33, 0x68, 0x4d, 0x65, 0x4f, 0x65, 0x6b, 0x6c, 0x70, 0x72, 0x41, 0x4d, 0x44, 0x54, 0x53, 0x78, 0x4f, 0x54, 0x6e, 0x33, 0x49, 0x62, 0x52, 0x49, 0x71, 0x79, 0x50, 0x4f, 0x77, 0x65, 0x35, 0x4a, 0x61, 0x6a, 0x66, 0x51, 0x5a, 0x32, 0x34, 0x54, 0x38, 0x43, 0x59, 0x46, 0x6a, 0x63, 0x36, 0x34, 0x37, 0x78, 0x75, 0x61, 0x4a, 0x4e, 0x6a, 0x6e, 0x6e, 0x37, 0x67, 0x61, 0x44, 0x7a, 0x74, 0x46, 0x6e, 0x77, 0x33, 0x65, 0x48, 0x47, 0x55, 0x4e, 0x67, 0x4e, 0x34, 0x69, 0x6d, 0x6f, 0x44, 0x37, 0x6b, 0x47, 0x44, 0x56, 0x67, 0x6b, 0x6e, 0x61, 0x34, 0x52, 0x44, 0x4e, 0x5a, 0x33, 0x6f, 0x4d, 0x46, 0x34, 0x78, 0x75, 0x6c, 0x70, 0x4a, 0x34, 0x66, 0x34, 0x63, 0x52, 0x4e, 0x77, 0x76, 0x6e, 0x52, 0x55, 0x38, 0x4e, 0x61, 0x6e, 0x4a, 0x76, 0x39, 0x31, 0x70, 0x52, 0x41, 0x31, 0x79, 0x30, 0x76, 0x47, 0x52, 0x6d, 0x34, 0x38, 0x76, 0x44, 0x71, 0x72, 0x67, 0x63, 0x69, 0x67, 0x48, 0x57, 0x31, 0x39, 0x71, 0x52, 0x70, 0x68, 0x69, 0x4b, 0x41, 0x49, 0x48, 0x6d, 0x49, 0x31, 0x48, 0x66, 0x36, 0x32, 0x47, 0x33, 0x64, 0x61, 0x63, 0x61, 0x65, 0x4f, 0x48, 0x43, 0x4f, 0x41, 0x47, 0x4d, 0x79, },
                        {0x45, 0x78, 0x70, 0x70, 0x61, 0x53, 0x38, 0x52, 0x4b, 0x6a, 0x77, 0x6e, 0x45, 0x33, 0x64, 0x57, 0x74, 0x6e, 0x63, 0x75, 0x6e, 0x57, 0x7a, 0x32, 0x4d, 0x55, 0x6b, 0x54, 0x30, 0x63, 0x31, 0x6d, 0x68, 0x51, 0x68, 0x72, 0x72, 0x6d, 0x50, 0x77, 0x42, 0x71, 0x61, 0x4c, 0x51, 0x30, 0x4b, 0x34, 0x4f, 0x36, 0x32, 0x71, 0x4c, 0x48, 0x6a, 0x78, 0x53, 0x48, 0x53, 0x50, 0x4a, 0x68, 0x6e, 0x45, 0x39, 0x43, 0x74, 0x6d, 0x39, 0x34, 0x47, 0x6a, 0x57, 0x61, 0x61, 0x76, 0x64, 0x42, 0x57, 0x64, 0x31, 0x4e, 0x65, 0x6e, 0x68, 0x5a, 0x4d, 0x4d, 0x72, 0x4f, 0x73, 0x47, 0x52, 0x7a, 0x62, 0x62, 0x78, 0x69, 0x53, 0x6e, 0x44, 0x44, 0x6f, 0x6e, 0x53, 0x69, 0x65, 0x37, 0x37, 0x78, 0x6f, 0x56, 0x48, 0x6a, 0x45, 0x77, 0x42, 0x4e, 0x30, 0x52, 0x6b, 0x50, 0x57, 0x58, 0x70, 0x4b, 0x67, 0x76, 0x33, 0x4a, 0x4a, 0x50, 0x42, 0x43, 0x42, 0x6d, 0x36, 0x37, 0x79, 0x75, 0x63, 0x32, 0x70, 0x62, 0x5a, 0x6d, 0x48, 0x49, 0x39, 0x6b, 0x44, 0x58, 0x72, 0x58, 0x6e, 0x62, 0x46, 0x53, 0x35, 0x30, 0x4a, 0x79, 0x69, 0x34, 0x4f, 0x65, 0x5a, 0x42, 0x57, 0x4b, 0x43, 0x76, 0x45, 0x73, 0x70, 0x64, 0x6a, 0x6d, 0x38, 0x56, 0x6d, 0x49, 0x6a, 0x57, 0x42, 0x5a, 0x5a, 0x41, 0x57, 0x41, 0x34, 0x37, 0x77, 0x61, 0x30, 0x31, 0x47, 0x46, 0x76, 0x43, 0x6c, 0x39, 0x6b, 0x4f, 0x6c, 0x63, 0x5a, 0x57, 0x62, 0x48, 0x57, 0x49, 0x37, 0x57, 0x53, 0x52, 0x61, 0x69, 0x73, 0x6f, 0x4a, 0x67, 0x7a, 0x7a, 0x71, 0x58, 0x56, 0x52, 0x52, 0x4e, 0x71, 0x32, 0x4d, 0x53, 0x4e, 0x4a, 0x56, 0x6f, 0x75, 0x6d, 0x57, 0x4b, 0x5a, 0x34, 0x31, 0x63, 0x77, 0x31, 0x42, 0x41, 0x6b, 0x56, 0x41, 0x6e, 0x67, 0x54, 0x70, 0x51, 0x73, 0x56, 0x77, 0x6a, 0x61, 0x72, 0x48, 0x53, 0x74, 0x65, 0x63, 0x56, 0x63, 0x61, 0x39, 0x65, 0x68, 0x70, 0x4e, 0x71, 0x39, 0x79, 0x33, 0x6a, 0x7a, 0x74, 0x54, 0x42, 0x4d, 0x75, 0x68, 0x41, 0x64, 0x33, 0x53, 0x67, 0x51, 0x38, 0x78, 0x31, 0x6b, 0x52, 0x31, 0x4a, 0x6f, 0x51, 0x4d, 0x71, 0x74, 0x59, 0x69, 0x79, 0x63, 0x4a, 0x6f, 0x70, 0x73, 0x76, 0x58, 0x47, 0x4f, 0x6c, 0x4c, 0x53, 0x75, 0x46, 0x45, 0x64, 0x54, 0x6f, 0x46, 0x37, 0x76, 0x57, 0x47, 0x4a, 0x6b, 0x50, 0x4b, 0x6c, 0x76, 0x73, 0x53, 0x6a, 0x67, 0x38, 0x47, 0x41, 0x53, 0x56, 0x6e, 0x4f, 0x57, 0x45, 0x64, 0x41, 0x30, 0x77, 0x76, },
                        {1258940153, 23000000},
                        {0x70, 0x44, 0x91, 0xa2, 0xb1, 0x1b, 0x5b, 0x5a, 0x44, 0x9a, 0x68, 0x52, 0xb9, 0x64, 0x5e, 0x14, 0x9, 0xc6, 0xb7, 0x26, 0xf2, 0xd8, 0x71, 0x72, 0xbd, 0x6, 0x2b, 0x5b, 0xed, 0x2b, 0xc0, 0x7d, }
                },
                {
                        {0x75, 0x36, 0x56, 0x47, 0x6b, 0x62, 0x30, 0x44, 0x4b, 0x67, 0x41, 0x68, 0x46, 0x31, 0x79, 0x73, 0x56, 0x65, 0x41, 0x43, 0x4b, 0x78, 0x59, 0x63, 0x49, 0x6b, 0x65, 0x75, 0x33, 0x41, 0x55, 0x41, 0x70, 0x77, 0x4c, 0x69, 0x43, 0x70, 0x75, 0x70, 0x6a, 0x63, 0x46, 0x64, 0x52, 0x35, 0x67, 0x64, 0x58, 0x46, 0x6b, 0x67, 0x4e, 0x36, 0x45, 0x6f, 0x47, 0x55, 0x33, 0x45, 0x61, 0x71, 0x63, 0x76, 0x53, 0x7a, 0x35, 0x4c, 0x4f, 0x46, 0x74, 0x72, 0x58, 0x68, 0x30, 0x6b, 0x48, 0x4f, 0x6e, 0x55, 0x54, 0x4b, 0x48, 0x33, 0x6f, 0x4a, 0x67, 0x53, 0x73, 0x68, 0x75, 0x57, 0x67, 0x4e, 0x38, 0x4e, 0x5a, 0x73, 0x69, 0x42, 0x38, 0x78, 0x58, 0x35, 0x70, 0x4a, 0x4b, 0x37, 0x4b, 0x73, 0x63, 0x56, 0x64, 0x6b, 0x5a, 0x42, 0x58, 0x7a, 0x4d, 0x65, 0x69, 0x75, 0x6f, 0x51, 0x36, 0x75, 0x50, 0x35, 0x45, 0x39, 0x68, 0x51, 0x50, 0x4f, 0x30, 0x44, 0x44, 0x6d, 0x36, 0x56, 0x77, 0x4c, 0x6e, 0x74, 0x46, 0x54, 0x43, 0x51, 0x33, 0x37, 0x34, 0x50, 0x71, 0x70, 0x50, 0x6c, 0x61, 0x58, 0x41, 0x48, 0x46, 0x4c, 0x72, 0x69, 0x31, 0x51, 0x33, 0x32, 0x71, 0x4e, 0x46, 0x70, 0x71, 0x64, 0x41, 0x4a, 0x31, 0x63, 0x71, 0x72, 0x47, 0x64, 0x55, 0x30, 0x62, 0x59, 0x6f, 0x5a, 0x70, 0x49, 0x73, 0x59, 0x4a, 0x56, 0x77, 0x56, 0x76, 0x79, 0x7a, 0x4a, 0x37, 0x75, 0x69, 0x64, 0x67, 0x4a, 0x33, 0x58, 0x73, 0x4b, 0x33, 0x54, 0x46, 0x7a, 0x33, 0x46, 0x73, 0x64, 0x72, 0x6d, 0x34, 0x6a, 0x53, 0x41, 0x47, 0x42, 0x6d, 0x79, 0x55, 0x6a, 0x38, 0x56, 0x6c, 0x59, 0x79, 0x47, 0x59, 0x49, 0x4e, 0x6f, 0x48, 0x32, 0x59, 0x55, 0x36, 0x32, 0x35, 0x30, 0x53, 0x43, 0x38, 0x7a, 0x6e, 0x6b, 0x4e, 0x67, 0x4f, 0x31, 0x41, 0x6d, 0x38, 0x45, 0x7a, 0x64, 0x47, 0x79, 0x53, 0x4d, 0x69, 0x69, 0x65, 0x44, 0x50, 0x34, 0x63, 0x62, 0x53, 0x4d, 0x58, 0x34, 0x49, 0x7a, 0x77, 0x70, 0x76, 0x59, 0x7a, 0x36, 0x68, 0x31, 0x47, 0x72, 0x57, 0x48, 0x57, 0x37, 0x67, 0x6a, 0x5a, 0x56, 0x49, 0x74, 0x51, 0x59, 0x35, 0x66, 0x54, 0x69, 0x50, 0x50, 0x31, 0x32, 0x50, 0x4b, 0x34, 0x70, 0x66, 0x43, 0x57, 0x53, 0x31, 0x70, 0x6d, 0x76, 0x5a, 0x5a, 0x75, 0x59, 0x4e, 0x55, 0x42, 0x4b, 0x32, 0x65, 0x48, 0x70, 0x59, 0x79, 0x4d, 0x41, 0x47, },
                        {0x47, 0x39, 0x57, 0x58, 0x53, 0x66, 0x63, 0x76, 0x57, 0x68, 0x76, 0x57, 0x6e, 0x6a, 0x5a, 0x67, 0x39, 0x78, 0x4b, 0x66, 0x70, 0x32, 0x59, 0x30, 0x63, 0x53, 0x74, 0x42, 0x51, 0x76, 0x47, 0x77, 0x6d, 0x66, 0x65, 0x4f, 0x4f, 0x39, 0x7a, 0x68, 0x55, 0x64, 0x73, 0x32, 0x4f, 0x72, 0x6d, 0x69, 0x6d, 0x57, 0x75, 0x6a, 0x70, 0x54, 0x43, 0x30, 0x38, 0x78, 0x41, 0x32, 0x50, 0x73, 0x37, 0x56, 0x71, 0x70, 0x50, 0x52, 0x48, 0x47, 0x4a, 0x4b, 0x75, 0x6c, 0x52, 0x5a, 0x45, 0x4d, 0x6e, 0x34, 0x44, 0x6e, 0x34, 0x7a, 0x64, 0x77, 0x47, 0x79, 0x77, 0x46, 0x33, 0x52, 0x32, 0x31, 0x4f, 0x41, 0x4c, 0x45, 0x4b, 0x62, 0x36, 0x75, 0x36, 0x4e, 0x55, 0x52, 0x6e, 0x6e, 0x32, 0x33, 0x4b, 0x46, 0x76, 0x46, 0x70, 0x55, 0x65, 0x57, 0x74, 0x32, 0x63, 0x71, 0x4f, 0x48, 0x44, 0x68, 0x63, 0x42, 0x37, 0x51, 0x4a, 0x62, 0x54, 0x4e, 0x50, 0x6c, 0x49, 0x77, 0x49, 0x79, 0x57, 0x55, 0x49, 0x67, 0x7a, 0x6b, 0x6b, 0x43, 0x5a, 0x78, 0x46, 0x31, 0x5a, 0x6e, 0x4c, 0x63, 0x47, 0x35, 0x36, 0x5a, 0x68, 0x59, 0x74, 0x4b, 0x38, 0x4b, 0x77, 0x64, 0x6e, 0x52, 0x50, 0x4d, 0x79, 0x66, 0x4b, 0x6a, 0x6c, 0x50, 0x64, 0x34, 0x33, 0x31, 0x41, 0x48, 0x4d, 0x76, 0x7a, 0x4d, 0x49, 0x48, 0x44, 0x32, 0x68, 0x72, 0x78, 0x7a, 0x4e, 0x4f, 0x53, 0x53, 0x72, 0x67, 0x64, 0x75, 0x69, 0x50, 0x71, 0x4c, 0x4d, 0x57, 0x4d, 0x71, 0x73, 0x35, 0x36, 0x36, 0x59, 0x59, 0x6e, 0x30, 0x77, 0x67, 0x39, 0x4d, 0x32, 0x77, 0x53, 0x47, 0x53, 0x50, 0x57, 0x74, 0x64, 0x4d, 0x42, 0x44, 0x52, 0x53, 0x34, 0x6a, 0x45, 0x54, 0x51, 0x51, 0x4c, 0x6c, 0x79, 0x64, 0x79, 0x51, 0x74, 0x77, 0x4b, 0x68, 0x74, 0x6c, 0x55, 0x68, 0x61, 0x68, 0x73, 0x4a, 0x6d, 0x49, 0x4c, 0x44, 0x63, 0x57, 0x38, 0x77, 0x79, 0x47, 0x62, 0x7a, 0x4b, 0x70, 0x63, 0x6c, 0x6d, 0x43, 0x33, 0x59, 0x55, 0x6e, 0x70, 0x78, 0x48, 0x6b, 0x32, 0x75, 0x31, 0x79, 0x45, 0x36, 0x70, 0x71, 0x73, 0x73, 0x66, 0x5a, 0x75, 0x34, 0x68, 0x6d, 0x48, 0x78, 0x6c, 0x6d, 0x42, 0x49, 0x6b, 0x66, 0x54, 0x67, 0x77, 0x38, 0x59, 0x72, 0x41, 0x33, 0x67, 0x6f, 0x7a, 0x55, 0x4f, 0x33, 0x35, 0x56, 0x58, 0x67, 0x44, 0x4e, 0x4f, 0x63, 0x32, 0x69, 0x30, 0x48, 0x69, 0x4e, 0x33, 0x4e, 0x75, 0x58, 0x62, 0x61, 0x45, 0x42, 0x7a, 0x72, 0x4d, 0x48, 0x44, 0x59, 0x38, 0x42, 0x45, 0x73, 0x54, 0x30, 0x69, 0x70, 0x49, 0x50, 0x55, 0x71, 0x71, 0x56, 0x65, 0x37, 0x6f, 0x4b, 0x67, 0x38, 0x52, 0x45, 0x73, 0x54, 0x35, 0x6e, 0x76, 0x39, 0x6f, 0x46, 0x32, 0x64, 0x76, 0x62, 0x71, 0x73, 0x47, 0x71, 0x67, 0x47, 0x45, 0x37, 0x54, 0x66, 0x50, 0x51, 0x72, 0x70, 0x54, 0x74, 0x30, 0x31, 0x5a, 0x51, 0x6d, 0x41, 0x6b, 0x54, 0x35, 0x52, 0x30, 0x59, 0x75, 0x38, 0x39, 0x47, 0x4d, 0x6f, 0x38, 0x35, 0x57, 0x54, 0x63, 0x73, 0x31, 0x51, 0x33, 0x61, 0x59, 0x38, 0x48, 0x56, 0x38, 0x6d, 0x4f, 0x43, 0x31, 0x6b, 0x34, 0x56, 0x31, 0x36, 0x4d, 0x62, 0x75, 0x74, 0x37, 0x61, 0x44, 0x69, 0x38, 0x44, 0x64, 0x4d, 0x46, 0x4c, 0x30, 0x4c, 0x64, 0x64, 0x73, 0x6c, 0x6e, 0x4b, 0x54, 0x54, 0x54, 0x7a, 0x30, 0x67, 0x51, 0x77, 0x35, 0x6a, 0x63, 0x75, 0x5a, 0x59, 0x79, 0x4e, 0x4c, 0x6d, 0x54, 0x66, 0x79, 0x44, 0x5a, 0x44, 0x65, 0x66, 0x68, 0x69, },
                        {1151470323, 98000000},
                        {0x7e, 0xe8, 0xcf, 0x98, 0xef, 0x21, 0x37, 0x7c, 0x97, 0x0, 0xa7, 0x93, 0x52, 0xe9, 0x5c, 0x42, 0x77, 0x38, 0x3, 0xfc, 0x47, 0xd, 0xde, 0xfd, 0x5a, 0xf0, 0xb1, 0x81, 0x69, 0x2b, 0x3c, 0xa3, }
                },
                {
                        {0x42, 0x5a, 0x4d, 0x54, 0x44, 0x6e, 0x45, 0x57, 0x58, 0x53, 0x70, 0x65, 0x38, 0x31, 0x6a, 0x39, 0x35, 0x79, 0x42, 0x30, 0x6b, 0x62, 0x4a, 0x72, 0x72, 0x53, 0x6c, 0x6b, 0x6b, 0x64, 0x62, 0x42, 0x54, 0x59, 0x6c, 0x6c, 0x59, 0x62, 0x73, 0x46, 0x5a, 0x39, 0x36, 0x31, 0x4a, 0x32, 0x41, 0x51, 0x33, 0x61, 0x4c, 0x39, 0x32, 0x58, 0x71, 0x53, 0x77, 0x32, 0x4c, 0x5a, 0x6c, 0x31, 0x32, 0x38, 0x53, 0x4b, 0x77, 0x38, 0x34, 0x31, 0x37, 0x57, 0x6f, 0x64, 0x54, 0x53, 0x54, 0x4a, 0x72, 0x50, 0x57, 0x38, 0x56, 0x52, 0x35, 0x70, 0x49, 0x44, 0x65, 0x75, 0x58, 0x52, 0x5a, 0x34, 0x6f, 0x43, 0x52, 0x78, 0x54, 0x6e, 0x39, 0x68, 0x58, 0x42, 0x4d, 0x44, 0x75, 0x47, 0x73, 0x4d, 0x76, 0x4a, 0x76, 0x51, 0x70, 0x61, 0x70, 0x34, 0x70, 0x54, 0x54, 0x6b, 0x68, 0x56, 0x75, 0x7a, 0x73, 0x34, 0x57, 0x38, 0x64, 0x61, 0x43, 0x39, 0x79, 0x51, 0x51, 0x34, 0x44, 0x64, 0x4f, 0x37, 0x4c, 0x6d, 0x73, 0x70, 0x56, 0x4d, 0x62, 0x77, 0x6a, 0x79, 0x32, 0x77, 0x47, 0x68, 0x63, 0x46, 0x42, 0x62, 0x53, 0x6f, 0x6b, 0x53, 0x53, 0x66, 0x73, 0x52, 0x74, 0x4f, 0x68, 0x7a, 0x37, 0x65, 0x51, 0x54, 0x63, 0x63, 0x68, 0x4d, 0x47, 0x32, 0x69, 0x73, 0x7a, 0x6e, 0x62, 0x39, 0x62, 0x6c, 0x4b, 0x35, 0x32, 0x38, 0x6b, 0x72, 0x63, 0x75, 0x30, 0x56, 0x79, 0x44, 0x75, 0x64, 0x66, 0x30, 0x74, 0x33, 0x56, 0x38, 0x62, 0x74, 0x62, 0x63, 0x78, 0x53, 0x6b, 0x77, 0x63, 0x49, 0x77, 0x76, 0x41, 0x4e, 0x6a, 0x34, 0x62, 0x57, 0x30, 0x36, 0x39, 0x66, 0x75, 0x65, 0x71, 0x68, 0x69, 0x74, 0x50, 0x68, 0x4f, },
                        {0x64, 0x75, 0x51, 0x56, 0x77, 0x7a, 0x30, 0x47, 0x59, 0x71, 0x6c, 0x6f, 0x71, 0x7a, 0x6d, 0x59, 0x42, 0x61, 0x4c, 0x6d, 0x63, 0x32, 0x6b, 0x42, 0x30, 0x45, 0x6c, 0x36, 0x32, 0x71, 0x4e, 0x69, 0x45, 0x54, 0x33, 0x70, 0x45, 0x6e, 0x79, 0x70, 0x67, 0x50, 0x68, 0x33, 0x37, 0x4e, 0x54, 0x62, 0x63, 0x78, 0x46, 0x4e, 0x71, 0x59, 0x50, 0x35, 0x73, 0x70, 0x6d, 0x68, 0x53, 0x72, 0x44, 0x7a, 0x41, 0x69, 0x72, 0x5a, 0x43, 0x6c, 0x79, 0x67, 0x75, 0x30, 0x57, 0x71, 0x34, 0x35, 0x4a, 0x34, 0x55, 0x61, 0x38, 0x64, 0x32, 0x51, 0x75, 0x32, 0x72, 0x6c, 0x42, 0x54, 0x61, 0x57, 0x73, 0x46, 0x61, 0x45, 0x36, 0x6e, 0x51, 0x54, 0x6a, 0x4d, 0x4c, 0x48, 0x71, 0x47, 0x58, 0x4e, 0x52, 0x51, 0x74, 0x33, 0x30, 0x36, 0x68, 0x6e, 0x4c, 0x65, 0x79, 0x6c, 0x4c, 0x49, 0x4a, 0x39, 0x65, 0x6c, 0x73, 0x34, 0x47, 0x32, 0x73, 0x38, 0x41, 0x41, 0x33, 0x36, 0x74, 0x5a, 0x75, 0x5a, 0x6d, 0x64, 0x54, 0x66, 0x46, 0x46, 0x34, 0x54, 0x68, 0x38, 0x46, 0x34, 0x68, 0x79, 0x47, 0x77, 0x53, 0x37, 0x51, 0x57, 0x43, 0x5a, 0x69, 0x6d, 0x71, 0x66, 0x35, 0x31, 0x32, 0x66, 0x70, 0x45, 0x65, 0x61, 0x76, 0x34, 0x33, 0x47, 0x30, 0x35, 0x33, 0x68, 0x39, 0x42, 0x69, 0x4a, 0x41, 0x46, 0x49, 0x38, 0x33, 0x57, 0x4d, 0x6b, 0x75, 0x64, 0x34, 0x38, 0x50, 0x6a, 0x64, 0x55, 0x46, 0x6d, 0x69, 0x4e, 0x32, 0x56, 0x75, 0x7a, 0x49, 0x79, 0x61, 0x6a, 0x7a, 0x61, 0x74, 0x77, 0x74, 0x32, 0x76, 0x4c, 0x48, 0x52, 0x45, 0x4a, 0x42, 0x75, 0x4d, 0x64, 0x76, 0x4d, 0x66, 0x69, 0x4a, 0x4c, 0x31, 0x30, 0x62, 0x68, 0x61, 0x5a, 0x5a, 0x46, 0x4a, 0x4c, 0x6c, 0x30, 0x35, 0x54, 0x4a, 0x35, 0x6c, 0x33, 0x47, 0x70, 0x4f, 0x6c, 0x5a, 0x36, 0x42, 0x61, 0x35, 0x43, 0x32, 0x54, 0x30, 0x36, 0x63, 0x69, 0x56, 0x67, 0x62, 0x50, 0x44, 0x66, 0x72, 0x61, 0x6e, 0x6f, 0x68, 0x64, 0x4a, 0x38, 0x31, 0x7a, 0x55, 0x34, 0x49, 0x42, 0x45, 0x59, 0x79, 0x7a, 0x4b, 0x61, 0x54, 0x65, 0x53, 0x38, 0x65, 0x6d, 0x4a, 0x43, 0x65, 0x79, 0x31, 0x77, 0x67, 0x37, 0x4e, 0x36, 0x53, 0x37, 0x79, 0x79, 0x66, 0x51, 0x54, 0x6b, 0x36, 0x32, 0x52, 0x47, 0x70, 0x55, 0x34, 0x63, 0x61, 0x6e, 0x42, 0x71, 0x58, 0x61, 0x74, 0x44, 0x32, 0x47, 0x44, 0x35, 0x4c, 0x56, 0x6f, 0x4e, 0x55, 0x42, 0x36, 0x70, 0x75, 0x62, 0x77, 0x48, 0x75, 0x72, 0x48, 0x63, 0x4b, 0x4f, 0x74, 0x42, 0x4b, 0x77, 0x4a, 0x70, 0x49, 0x55, 0x66, 0x59, 0x47, 0x6a, 0x44, 0x51, 0x79, 0x75, 0x6d, 0x72, 0x6e, 0x64, 0x75, 0x78, 0x6e, 0x55, 0x4f, 0x65, 0x4a, 0x74, 0x39, 0x42, 0x69, 0x31, 0x6f, 0x6f, 0x6b, 0x76, 0x64, 0x45, 0x4f, 0x65, 0x75, 0x55, 0x66, 0x61, 0x42, 0x44, 0x4b, 0x46, 0x35, 0x58, 0x62, 0x4a, 0x45, 0x4c, 0x6f, 0x58, 0x58, 0x70, 0x62, 0x50, 0x68, 0x37, 0x77, 0x4b, 0x70, 0x78, 0x67, 0x4e, 0x32, 0x31, 0x59, 0x34, 0x56, 0x34, 0x72, 0x4b, 0x4a, 0x6c, 0x4c, 0x79, 0x55, 0x7a, 0x58, 0x4f, 0x42, 0x62, 0x31, 0x39, 0x36, 0x39, 0x57, 0x47, 0x62, 0x5a, 0x64, },
                        {1228389756, 935000000},
                        {0xc1, 0xc4, 0x92, 0x0, 0xd9, 0x43, 0x25, 0xad, 0x64, 0x44, 0xc6, 0x86, 0x12, 0xf6, 0xe, 0x99, 0x7, 0x8, 0x62, 0xf2, 0xe, 0x41, 0x3, 0x59, 0x79, 0xa6, 0x39, 0x24, 0x6d, 0x2e, 0x8a, 0x4a, }
                },
                {
                        {0x53, 0x41, 0x61, 0x44, 0x6d, 0x53, 0x43, 0x70, 0x4c, 0x37, 0x48, 0x63, 0x4b, 0x64, 0x51, 0x79, 0x51, 0x36, 0x67, 0x74, 0x45, 0x69, 0x42, 0x67, 0x46, 0x4e, 0x63, 0x74, 0x30, 0x51, 0x72, 0x6a, 0x4e, 0x76, 0x51, 0x43, 0x4d, 0x61, 0x45, 0x64, 0x67, 0x53, 0x45, 0x5a, 0x47, 0x71, 0x63, 0x76, 0x56, 0x6d, 0x55, 0x5a, 0x33, 0x38, 0x64, 0x6f, 0x71, 0x7a, 0x4e, 0x45, 0x62, 0x55, 0x42, 0x68, 0x75, 0x78, 0x70, 0x4a, 0x48, 0x4b, 0x7a, 0x38, 0x64, 0x53, 0x7a, 0x44, 0x53, 0x43, 0x34, 0x57, 0x65, 0x69, 0x35, 0x4e, 0x4e, 0x50, 0x32, 0x49, 0x4a, 0x4f, 0x48, 0x77, 0x67, 0x47, 0x62, 0x31, 0x57, 0x51, 0x4c, 0x37, 0x4f, 0x77, 0x33, 0x69, 0x39, 0x66, 0x78, 0x46, 0x33, 0x62, 0x35, 0x6a, 0x68, 0x32, 0x73, 0x5a, 0x51, 0x6d, 0x35, 0x4f, 0x44, 0x35, 0x66, 0x62, 0x56, 0x69, 0x37, 0x41, 0x6f, 0x4b, 0x41, 0x6b, 0x54, 0x6a, 0x48, 0x73, 0x45, 0x48, 0x4a, 0x58, 0x51, 0x75, 0x56, 0x61, 0x6b, 0x59, 0x65, 0x72, 0x70, 0x51, 0x51, 0x76, 0x6f, 0x53, 0x4c, 0x32, 0x45, 0x47, 0x56, 0x70, 0x68, 0x78, 0x72, 0x6b, 0x53, 0x69, 0x72, 0x56, 0x4a, 0x65, 0x51, 0x43, 0x6c, 0x58, 0x78, 0x38, 0x6d, 0x57, 0x62, 0x46, 0x64, },
                        {0x69, 0x6a, 0x62, 0x46, 0x31, 0x57, 0x47, 0x39, 0x69, 0x57, 0x4f, 0x77, 0x74, 0x32, 0x6a, 0x55, 0x55, 0x6b, 0x4c, 0x5a, 0x73, 0x52, 0x54, 0x65, 0x67, 0x53, 0x71, 0x4d, 0x33, 0x50, 0x35, 0x4e, 0x63, 0x4a, 0x7a, 0x46, 0x7a, 0x51, 0x69, 0x4d, 0x59, 0x54, 0x32, 0x74, 0x71, 0x61, 0x30, 0x5a, 0x31, 0x63, 0x36, 0x71, 0x72, 0x34, },
                        {1339959603, 190000000},
                        {0xa7, 0x20, 0x68, 0xdf, 0x34, 0xea, 0x9e, 0x80, 0xf2, 0xa2, 0xa9, 0x7a, 0xbc, 0x43, 0xbe, 0x4e, 0x9c, 0xf2, 0x8f, 0x25, 0xbd, 0x3d, 0x78, 0x68, 0xba, 0xe8, 0x6a, 0x6f, 0x7d, 0x43, 0x51, 0x7c, }
                },
                {
                        {0x39, 0x6a, 0x37, 0x43, 0x4d, 0x74, 0x73, 0x51, 0x46, 0x35, 0x61, 0x7a, 0x6e, 0x47, 0x42, 0x42, 0x34, 0x78, 0x53, 0x4c, 0x79, 0x35, 0x74, 0x39, 0x4d, 0x43, 0x6b, 0x61, 0x6d, 0x6d, 0x46, 0x77, 0x52, 0x5a, 0x37, 0x67, 0x77, 0x56, 0x74, 0x6f, 0x42, 0x6b, 0x6e, 0x57, 0x68, 0x6c, 0x61, 0x6c, 0x6e, 0x4e, 0x30, 0x52, 0x48, 0x61, 0x69, 0x77, 0x6f, 0x50, 0x76, 0x30, 0x50, 0x79, 0x6d, 0x73, 0x4f, 0x52, 0x6e, 0x31, 0x71, 0x5a, 0x45, 0x30, 0x75, 0x74, 0x4c, 0x66, 0x6d, 0x36, 0x30, 0x33, 0x4d, 0x6c, 0x43, 0x53, 0x66, 0x68, },
                        {0x5a, 0x63, 0x77, 0x5a, 0x66, 0x35, 0x61, 0x65, 0x6a, 0x6f, 0x46, 0x59, 0x57, 0x4e, 0x67, 0x44, 0x53, 0x39, 0x68, 0x6b, 0x39, 0x45, 0x55, 0x6f, 0x6b, 0x4b, 0x65, 0x48, 0x52, 0x34, 0x77, 0x50, 0x6e, 0x6f, 0x73, 0x66, 0x42, 0x73, 0x4d, 0x54, 0x74, 0x6d, 0x47, 0x34, 0x59, 0x31, 0x39, 0x69, 0x4e, 0x77, 0x59, 0x5a, 0x49, 0x37, 0x54, 0x61, 0x5a, 0x4b, 0x62, 0x55, 0x6e, 0x63, 0x79, 0x52, 0x46, 0x55, 0x78, 0x65, 0x67, 0x62, 0x53, 0x39, 0x68, 0x47, 0x4a, 0x65, 0x63, 0x49, 0x4e, 0x34, 0x54, 0x41, 0x30, 0x69, 0x76, 0x49, 0x31, 0x77, 0x77, 0x73, 0x6c, 0x56, 0x61, 0x70, 0x63, 0x64, 0x55, 0x6b, 0x65, 0x59, 0x31, 0x47, 0x6b, 0x73, 0x65, 0x53, 0x72, 0x54, 0x77, 0x70, 0x48, 0x44, 0x56, 0x65, 0x41, 0x35, 0x6c, 0x48, 0x4c, 0x68, 0x5a, 0x68, 0x71, 0x6c, 0x6a, 0x54, 0x78, 0x6a, 0x44, 0x37, 0x61, 0x69, 0x53, 0x75, 0x77, 0x78, 0x57, 0x76, 0x48, 0x72, 0x6a, 0x51, 0x47, 0x47, 0x43, 0x42, 0x77, 0x4d, 0x7a, 0x43, 0x35, 0x70, 0x32, 0x74, 0x4e, 0x55, },
                        {1236014124, 17000000},
                        {0xc9, 0xb6, 0xd4, 0x75, 0x82, 0x62, 0x31, 0xf4, 0x98, 0x16, 0x3c, 0x21, 0x33, 0x14, 0xe6, 0xe9, 0x78, 0xc0, 0x3a, 0xcd, 0x92, 0xe3, 0xa, 0xa6, 0x3c, 0x8f, 0x34, 0x81, 0x79, 0xe1, 0x24, 0x72, }
                },
                {
                        {0x63, 0x6c, 0x70, 0x79, 0x63, 0x36, 0x4a, 0x6b, 0x51, 0x4d, 0x54, 0x53, 0x66, 0x33, 0x51, 0x59, 0x4c, 0x39, 0x32, 0x78, 0x32, 0x6d, 0x72, 0x45, 0x4f, 0x6f, 0x41, 0x46, 0x6e, 0x74, 0x63, 0x5a, 0x6b, 0x68, 0x74, 0x4e, 0x46, 0x43, 0x48, 0x69, 0x79, 0x67, 0x50, 0x4e, 0x4f, 0x79, 0x6c, 0x63, 0x50, 0x59, 0x57, 0x49, 0x71, 0x77, 0x71, 0x76, 0x6e, 0x35, 0x37, 0x6e, 0x6f, 0x67, 0x65, 0x53, 0x55, 0x76, 0x4e, 0x47, 0x61, 0x4e, 0x45, 0x50, 0x67, 0x77, 0x35, 0x6f, 0x69, 0x65, 0x46, 0x41, 0x71, 0x68, 0x4f, 0x58, 0x51, 0x68, 0x70, 0x39, 0x57, 0x63, 0x4d, 0x54, 0x6e, 0x79, 0x54, 0x53, 0x70, 0x58, 0x45, 0x57, 0x70, 0x66, 0x50, 0x4e, 0x42, 0x63, 0x48, 0x75, 0x7a, 0x61, 0x77, 0x45, 0x4b, 0x6f, 0x6c, 0x30, 0x36, 0x4f, 0x42, 0x48, 0x78, 0x76, 0x57, 0x32, },
                        {0x69, 0x52, 0x4c, 0x65, 0x58, 0x77, 0x4b, 0x70, 0x56, 0x55, 0x58, 0x79, 0x47, 0x54, 0x69, 0x4b, 0x54, 0x75, 0x4a, 0x36, 0x54, 0x38, 0x57, 0x36, 0x70, 0x76, 0x37, 0x75, 0x6a, 0x6c, 0x71, 0x53, 0x4d, 0x6b, 0x6f, 0x66, 0x44, 0x50, 0x6e, 0x72, 0x32, 0x73, 0x47, 0x56, 0x4c, 0x45, 0x61, 0x71, 0x56, 0x46, 0x55, 0x62, 0x41, 0x45, 0x7a, 0x49, 0x6e, 0x7a, 0x58, 0x78, 0x6b, 0x30, 0x54, 0x49, 0x42, 0x5a, 0x76, 0x45, 0x53, 0x6e, 0x79, 0x71, 0x74, 0x35, 0x58, 0x47, 0x71, 0x46, 0x75, 0x4f, 0x74, 0x6f, 0x64, 0x6b, 0x4d, 0x4d, 0x59, 0x79, 0x6a, 0x4d, 0x7a, 0x72, 0x71, 0x36, 0x37, 0x49, 0x4c, 0x44, 0x30, 0x37, 0x58, 0x71, 0x62, 0x78, 0x4c, 0x70, 0x63, 0x57, 0x32, 0x72, 0x61, 0x61, 0x4f, 0x54, 0x75, 0x4d, 0x77, 0x31, 0x4f, 0x4a, 0x6c, 0x76, 0x51, 0x55, 0x6f, 0x4a, 0x48, 0x47, 0x75, 0x7a, 0x72, 0x4b, 0x50, 0x33, 0x76, 0x4e, 0x52, 0x32, 0x4a, 0x65, 0x57, 0x6c, 0x54, 0x63, 0x58, 0x54, 0x35, 0x51, 0x48, 0x4d, 0x45, 0x79, 0x38, 0x36, 0x34, 0x34, 0x6d, 0x78, 0x64, 0x44, 0x67, 0x34, 0x6b, 0x6e, 0x43, 0x55, 0x59, 0x38, 0x45, 0x4b, 0x77, 0x66, 0x79, 0x36, 0x67, 0x4c, 0x34, 0x47, 0x4a, 0x69, 0x45, 0x51, 0x48, 0x4a, 0x4f, 0x34, 0x43, 0x41, 0x79, 0x37, 0x58, 0x46, 0x62, 0x6e, 0x75, 0x56, 0x32, 0x53, 0x45, 0x63, 0x44, 0x5a, 0x54, 0x70, 0x35, 0x31, 0x64, 0x77, 0x7a, 0x4e, 0x75, 0x78, 0x42, 0x36, 0x70, 0x64, 0x38, 0x61, 0x58, 0x78, 0x55, 0x45, 0x47, 0x48, 0x59, 0x33, 0x54, 0x37, 0x34, 0x46, 0x36, 0x56, 0x6e, 0x6e, 0x53, 0x72, 0x6f, 0x43, 0x32, 0x47, 0x66, 0x67, 0x32, 0x6c, 0x4d, 0x48, 0x70, 0x4e, 0x41, 0x4d, 0x78, 0x54, 0x6a, 0x6a, 0x67, 0x74, 0x41, 0x48, 0x77, 0x7a, 0x32, 0x32, 0x68, 0x69, 0x66, 0x73, 0x39, 0x6f, 0x44, 0x50, 0x6d, 0x36, 0x41, 0x6b, 0x6c, 0x49, 0x6e, 0x4a, 0x45, 0x36, 0x6e, 0x48, 0x6b, 0x56, 0x4a, 0x36, 0x65, 0x47, 0x75, 0x44, 0x38, 0x59, 0x30, 0x32, 0x64, 0x4a, 0x43, 0x73, 0x56, 0x36, 0x48, 0x54, 0x63, 0x4d, 0x4a, 0x4f, 0x63, 0x4b, 0x44, 0x49, 0x46, 0x58, 0x45, 0x32, 0x38, 0x57, 0x4e, 0x54, 0x31, 0x64, 0x51, 0x36, 0x6d, 0x76, 0x37, 0x76, 0x36, 0x35, 0x48, 0x46, 0x41, 0x43, 0x69, 0x34, 0x55, 0x35, 0x75, 0x79, 0x62, 0x44, 0x4b, 0x75, 0x34, 0x73, 0x48, 0x79, 0x75, 0x68, 0x33, 0x49, 0x30, 0x49, 0x4a, 0x4b, 0x44, 0x4b, 0x65, 0x7a, },
                        {1345487757, 434000000},
                        {0xf8, 0x77, 0x33, 0x96, 0xc7, 0x73, 0x2b, 0x7e, 0x3b, 0x43, 0x41, 0x5d, 0x2f, 0xc7, 0x27, 0x7, 0x8d, 0x18, 0xcd, 0x83, 0xf6, 0x8e, 0x5b, 0x32, 0x63, 0x80, 0x91, 0x59, 0xfb, 0xbc, 0x1e, 0x46, }
                },
                {
                        {0x49, 0x6a, 0x6d, 0x34, 0x74, 0x33, 0x51, 0x6d, 0x4e, 0x76, 0x4c, 0x6a, 0x4c, 0x6f, 0x75, 0x38, 0x44, 0x6e, 0x57, 0x56, 0x77, 0x64, 0x32, 0x4a, 0x51, 0x7a, 0x6a, 0x51, 0x37, 0x59, 0x32, 0x70, 0x31, 0x30, 0x64, 0x71, 0x4a, 0x43, 0x46, 0x4f, 0x66, 0x71, 0x31, 0x66, 0x33, 0x73, 0x61, 0x34, 0x66, 0x69, 0x75, 0x61, 0x4f, 0x6a, 0x68, 0x5a, 0x52, 0x59, 0x74, 0x56, 0x6f, 0x6d, 0x74, 0x30, 0x6a, 0x6a, 0x70, 0x44, 0x49, 0x45, 0x79, 0x62, 0x4a, 0x76, 0x66, 0x68, 0x6f, 0x48, 0x76, 0x76, 0x54, 0x4d, 0x30, 0x52, 0x6a, 0x55, 0x7a, 0x46, 0x6e, 0x59, 0x4e, 0x6e, 0x30, 0x30, 0x38, 0x4f, 0x36, 0x55, 0x65, 0x30, 0x73, 0x7a, 0x48, 0x31, 0x66, 0x73, 0x4b, 0x4a, 0x33, 0x35, 0x35, 0x38, 0x5a, 0x47, 0x6c, 0x7a, 0x57, 0x78, 0x39, 0x53, 0x53, 0x76, 0x63, 0x76, 0x6a, 0x67, 0x75, 0x33, 0x35, 0x31, 0x36, 0x49, 0x47, 0x64, 0x37, 0x78, 0x35, 0x6e, 0x68, 0x37, 0x59, 0x78, 0x63, 0x37, 0x36, 0x78, 0x65, 0x32, 0x33, 0x33, 0x78, 0x6f, 0x56, 0x53, 0x45, 0x41, 0x31, 0x30, 0x7a, 0x46, 0x76, 0x64, 0x66, 0x4c, 0x69, 0x68, 0x53, 0x47, 0x7a, 0x56, 0x46, 0x69, 0x78, 0x32, 0x59, 0x4d, 0x55, 0x39, 0x32, 0x6a, 0x4f, 0x74, 0x71, 0x42, 0x53, 0x6a, 0x72, 0x68, 0x4e, 0x33, 0x49, 0x36, 0x64, 0x45, 0x53, 0x6c, 0x69, 0x57, 0x31, 0x33, 0x49, 0x42, 0x63, 0x72, },
                        {0x43, 0x45, 0x69, 0x72, 0x6f, 0x6a, 0x37, 0x47, 0x31, 0x38, 0x73, 0x77, 0x36, 0x79, 0x4b, 0x55, 0x58, 0x37, 0x6d, 0x34, 0x45, 0x30, 0x63, 0x35, 0x36, 0x43, 0x6d, 0x36, 0x4b, 0x5a, 0x69, 0x78, 0x6f, 0x64, 0x53, 0x43, 0x34, 0x75, 0x51, 0x6b, 0x47, 0x39, 0x72, 0x61, 0x35, 0x34, 0x5a, 0x53, 0x36, 0x73, 0x73, 0x46, 0x65, 0x43, 0x39, 0x78, 0x37, 0x78, 0x6d, 0x53, 0x35, 0x36, 0x78, 0x57, 0x4a, 0x4d, 0x54, 0x6b, 0x46, 0x6f, 0x54, 0x77, 0x34, 0x30, 0x45, 0x59, 0x64, 0x71, 0x64, 0x6a, 0x61, 0x46, 0x67, 0x47, 0x62, 0x34, 0x75, 0x55, 0x59, 0x74, 0x49, 0x7a, 0x76, 0x46, 0x6b, 0x53, 0x68, 0x30, 0x52, 0x7a, 0x70, 0x65, 0x62, 0x67, 0x38, },
                        {894873668, 952000000},
                        {0x3d, 0xe6, 0xe2, 0xfa, 0x4a, 0x4d, 0x21, 0xae, 0x5f, 0xfa, 0xb3, 0x61, 0xf9, 0xf2, 0x72, 0x60, 0x2b, 0x7a, 0x48, 0x12, 0x51, 0x5e, 0xcf, 0xda, 0xc8, 0x55, 0xc2, 0x49, 0x7d, 0x6, 0x99, 0xc8, }
                },
                {
                        {0x66, 0x55, 0x5a, 0x7a, 0x67, 0x33, 0x44, 0x32, 0x7a, 0x42, 0x6a, 0x64, 0x48, 0x6b, 0x43, 0x6b, 0x46, 0x4d, 0x33, 0x5a, 0x74, 0x44, 0x43, 0x47, 0x6b, 0x69, 0x50, 0x59, 0x70, 0x76, 0x54, 0x59, 0x75, 0x4c, 0x69, 0x37, 0x37, 0x6a, 0x6b, 0x79, 0x65, 0x6c, 0x4c, 0x71, 0x4d, 0x59, 0x6d, 0x6f, 0x41, 0x73, 0x6c, 0x4d, 0x65, 0x76, 0x59, 0x4f, 0x79, 0x59, 0x65, 0x7a, 0x4e, 0x59, 0x41, 0x56, 0x70, 0x75, 0x79, 0x67, 0x55, 0x66, 0x54, 0x68, 0x70, 0x6c, 0x75, 0x57, 0x36, 0x6b, 0x4d, 0x53, 0x47, 0x71, 0x6a, 0x71, 0x55, 0x55, 0x5a, 0x4e, 0x35, 0x4c, 0x6a, 0x63, 0x6a, 0x75, 0x73, 0x48, 0x6b, 0x4e, 0x79, 0x53, 0x4a, 0x6a, 0x34, 0x6c, 0x41, 0x47, 0x42, 0x57, 0x6b, 0x4d, 0x43, 0x65, 0x75, 0x32, 0x32, 0x38, 0x39, 0x58, 0x67, 0x4c, 0x70, 0x36, 0x59, 0x50, 0x64, 0x4e, 0x6d, 0x76, 0x4a, 0x59, 0x43, 0x76, 0x36, 0x66, 0x7a, 0x76, 0x76, 0x47, 0x4d, 0x45, 0x49, 0x7a, 0x51, 0x34, 0x46, 0x5a, 0x34, 0x6f, 0x32, 0x54, 0x45, 0x56, 0x38, 0x54, 0x74, 0x78, 0x39, 0x52, 0x73, 0x75, 0x4d, 0x6f, 0x58, 0x58, 0x59, 0x46, 0x46, 0x43, 0x69, 0x74, 0x4d, 0x45, 0x46, 0x38, 0x4f, 0x45, 0x61, 0x45, 0x74, 0x53, 0x41, 0x4b, 0x47, 0x35, 0x46, 0x72, 0x4d, 0x36, 0x44, 0x72, 0x77, 0x51, 0x6e, 0x54, 0x54, 0x58, 0x42, 0x65, 0x31, 0x46, 0x42, 0x6f, 0x64, 0x4f, 0x76, 0x74, 0x4d, 0x64, 0x7a, 0x4b, 0x59, 0x41, 0x51, 0x67, 0x6a, 0x68, 0x7a, 0x56, 0x62, 0x62, 0x52, 0x75, 0x4f, 0x6e, 0x4d, 0x31, 0x51, 0x53, 0x6c, 0x37, 0x30, 0x4b, 0x4c, 0x56, 0x4c, 0x47, 0x37, 0x46, 0x75, 0x58, 0x4d, 0x67, 0x32, 0x6f, 0x6d, 0x7a, 0x70, 0x6d, 0x64, 0x38, 0x49, 0x75, 0x52, 0x6a, 0x4d, 0x55, 0x42, 0x78, 0x47, 0x5a, },
                        {0x6a, 0x6e, 0x39, 0x4f, 0x74, 0x47, 0x32, 0x38, 0x38, 0x78, 0x43, 0x53, 0x78, 0x69, 0x62, 0x63, 0x37, 0x39, 0x6f, 0x44, 0x32, 0x30, 0x49, 0x44, 0x6c, 0x51, 0x36, 0x6a, 0x72, 0x57, 0x64, 0x51, 0x73, 0x4a, 0x47, 0x6a, 0x6e, 0x63, 0x53, 0x6a, 0x4f, 0x30, 0x65, 0x61, 0x51, 0x55, 0x78, 0x76, 0x74, 0x58, 0x63, 0x35, 0x36, 0x58, 0x7a, 0x69, 0x67, 0x58, 0x6a, 0x68, 0x75, 0x72, 0x49, 0x7a, 0x4c, 0x6f, 0x46, 0x51, 0x5a, 0x6f, 0x66, 0x32, 0x51, 0x52, 0x4e, 0x79, 0x37, 0x4a, 0x30, 0x39, 0x61, 0x73, 0x55, 0x6f, 0x52, 0x4d, 0x51, 0x59, 0x4e, 0x61, 0x4f, 0x47, 0x4c, 0x62, 0x67, 0x6c, 0x31, 0x76, 0x33, 0x50, 0x70, 0x4e, 0x43, 0x53, 0x32, 0x31, 0x56, 0x7a, 0x6f, 0x71, 0x32, 0x37, 0x36, 0x38, 0x63, 0x42, 0x6d, 0x42, 0x49, 0x70, 0x54, 0x74, 0x79, 0x4b, 0x37, 0x31, 0x79, 0x43, 0x6b, 0x6f, 0x62, 0x79, 0x43, 0x58, 0x6b, 0x4c, 0x32, 0x4e, 0x67, 0x74, 0x30, 0x37, 0x51, 0x76, 0x64, 0x47, 0x44, 0x71, 0x59, 0x79, 0x4a, 0x38, 0x75, 0x79, 0x4f, 0x46, 0x48, 0x67, 0x34, 0x70, 0x77, 0x79, 0x6c, 0x5a, 0x30, 0x68, 0x64, 0x35, 0x4b, 0x6b, 0x4d, 0x56, 0x55, 0x63, 0x48, 0x66, 0x32, 0x33, 0x30, 0x64, 0x30, 0x76, 0x76, 0x76, 0x77, 0x4c, 0x56, 0x42, 0x36, 0x32, 0x55, 0x72, 0x36, 0x37, 0x78, 0x6e, 0x48, 0x4d, 0x4c, 0x6e, 0x39, 0x46, 0x5a, 0x51, 0x72, 0x6e, 0x43, 0x7a, 0x30, 0x71, 0x4c, 0x64, 0x48, 0x56, 0x35, 0x33, 0x4b, 0x6d, 0x78, 0x30, 0x63, 0x58, 0x62, 0x32, 0x71, 0x43, 0x64, 0x4d, 0x55, 0x6c, 0x59, 0x74, 0x33, 0x38, 0x38, 0x30, 0x48, 0x69, 0x45, 0x38, 0x51, 0x39, 0x44, 0x55, 0x66, 0x47, 0x5a, 0x47, 0x59, 0x6d, 0x77, 0x6b, 0x69, 0x4c, 0x4b, 0x47, 0x48, 0x57, 0x4f, 0x43, 0x71, 0x66, 0x32, 0x4d, 0x38, 0x51, 0x75, 0x6c, 0x6f, 0x32, 0x64, 0x41, 0x70, 0x6d, 0x4e, 0x33, 0x70, 0x6f, 0x71, 0x6f, 0x45, 0x4c, 0x69, 0x61, 0x62, 0x6f, 0x77, 0x34, 0x70, 0x41, 0x57, 0x38, 0x58, 0x57, 0x4f, 0x77, 0x32, 0x72, 0x55, 0x44, 0x76, 0x52, 0x4f, 0x78, 0x48, 0x33, 0x57, 0x30, },
                        {1664234956, 521000000},
                        {0x75, 0x6d, 0xb1, 0xff, 0xe1, 0xe4, 0xfd, 0x75, 0x27, 0x3e, 0x2c, 0xeb, 0xab, 0x19, 0xb4, 0x9b, 0xdc, 0xd8, 0x8e, 0x5e, 0xf2, 0x8d, 0x81, 0x87, 0x16, 0xfa, 0xa2, 0x1a, 0xfc, 0xe, 0xc6, 0xd5, }
                },


        };

        for (const auto& testcase : outer_transactions) {
                uint8_t toSign[32] = {0};
                outer_layer_tx_t outerTxn {
                        .code = testcase.code.data(),
                        .codeSize = static_cast<uint32_t>(testcase.code.size()),
                        .data = testcase.data.data(),
                        .dataSize = static_cast<uint32_t>(testcase.data.size()),
                        .timestamp = testcase.timestamp,
                };
                zxerr_t err = crypto_getBytesToSign(&outerTxn, (uint8_t*) &toSign, sizeof(toSign));

                ASSERT_EQ(err, zxerr_ok);
                EXPECT_TRUE(memcmp(testcase.bytes_to_sign.data(), &toSign, sizeof(toSign)) == 0);
        }
}
#endif
